["versions"]
slf4j = "2.0.16"
micrometer = "1.12.13"
reactor = "3.6.12"
kotlin_ = "1.9.10" # Visit https://kotlinlang.org/docs/releases.html#release-details to see versions compatability
kotlin-coroutines = "1.7.3"
jackson = "2.17.3"
mockserver = "5.15.0"
netty = "4.1.100.Final"
kafka = "3.7.1"
vertx = "4.3.8"
testcontainers = "1.18.3"
cassandra = "4.18.1"
grpc-java = "1.65.1"
grpc-kotlin = "1.4.1"
kotlin-testing = "1.5.0"
ksp = "1.9.10-1.0.13"
kotlinpoet = "1.18.1"
swagger = "2.2.25"
opentelemetry = "1.37.0"
undertow = "2.3.18.Final"
undertow-jakarta = "6.2.8.Final"
camunda7 = "7.21.0"
zeebe = "8.6.7"

["libraries"]
jsr305 = { module = "com.google.code.findbugs:jsr305", version = "3.0.2" }
jakarta-annotations = { module = "jakarta.annotation:jakarta.annotation-api", version = "2.1.1" }

slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-jul = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
logback-classic = { module = "ch.qos.logback:logback-classic", version = "1.5.16" }

micrometer-core = { module = "io.micrometer:micrometer-core", version.ref = "micrometer" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer" }
prometheus-collector-caffeine = { module = "io.prometheus:simpleclient_caffeine", version = "0.16.0" }

opentelemetry-sdk-trace = { module = "io.opentelemetry:opentelemetry-sdk-trace", version.ref = "opentelemetry" }
opentelemetry-context = { module = "io.opentelemetry:opentelemetry-context", version.ref = "opentelemetry" }
opentelemetry-api = { module = "io.opentelemetry:opentelemetry-api", version.ref = "opentelemetry" }
opentelemetry-semconv = { module = "io.opentelemetry.semconv:opentelemetry-semconv", version = "1.25.0-alpha" }
opentelemetry-semconv-incubating = { module = "io.opentelemetry.semconv:opentelemetry-semconv-incubating", version = "1.25.0-alpha" }
opentelemetry-exporter-sender-jdk = { module = "io.opentelemetry:opentelemetry-exporter-sender-jdk", version = "1.37.0-alpha" }
opentelemetry-exporter-otlp = { module = "io.opentelemetry:opentelemetry-exporter-otlp", version.ref = "opentelemetry" }

typesafe-config = { module = "com.typesafe:config", version = "1.4.3" }
snakeyaml-engine = { module = "org.snakeyaml:snakeyaml-engine", version = "2.7" }

cassandra-driver = { module = "org.apache.cassandra:java-driver-core", version.ref = "cassandra" }
cassandra-metrics = { module = "org.apache.cassandra:java-driver-metrics-micrometer", version.ref = "cassandra" }

reactive-streams = { module = "org.reactivestreams:reactive-streams", version = "1.0.4" }
reactor-core = { module = "io.projectreactor:reactor-core", version.ref = "reactor" }
reactor-test = { module = "io.projectreactor:reactor-test", version.ref = "reactor" }
reactor-pool = { module = "io.projectreactor.addons:reactor-pool", version = "1.0.8" }

kotlin-stdlib-common = { module = "org.jetbrains.kotlin:kotlin-stdlib-common", version.ref = "kotlin_" }
kotlin-stdlib-lib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin_" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin_" }
kotlin-compiler = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin_" }
jetbrains-annotations = { module = "org.jetbrains:annotations", version = "24.1.0" }

kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlin-coroutines" }
kotlin-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlin-coroutines" }

jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jdbc-postgresql = { module = "org.postgresql:postgresql", version = "42.7.3" }
hikari = { module = "com.zaxxer:HikariCP", version = "5.1.0" }
jdbi-core = { module = "org.jdbi:jdbi3-core", version = "3.41.3" }
flyway = { module = "org.flywaydb:flyway-core", version = "9.22.3" }
liquibase = { module = "org.liquibase:liquibase-core", version = "4.29.1" }

jms-api = { module = "javax.jms:javax.jms-api", version = "2.0.1" }

jboss-threads = { module = "org.jboss.threads:jboss-threads", version = "3.5.1.Final" }
jboss-logging = { module = "org.jboss.logging:jboss-logging", version = "3.5.3.Final" }
undertow-core = { module = "io.undertow:undertow-core", version.ref = "undertow" }
undertow-servlet = { module = "io.undertow:undertow-servlet", version.ref = "undertow" }
async-http-client = { module = "org.asynchttpclient:async-http-client", version = "2.12.4" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version = "5.0.0-alpha.14" }
okio = { module = "com.squareup.okio:okio", version = "3.9.1" }

netty-buffer = { module = "io.netty:netty-buffer", version.ref = "netty" }
netty-codecs = { module = "io.netty:netty-codec", version.ref = "netty" }
netty-common = { module = "io.netty:netty-common", version.ref = "netty" }
netty-resolver = { module = "io.netty:netty-resolver", version.ref = "netty" }
netty-resolver-dns = { module = "io.netty:netty-resolver-dns", version.ref = "netty" }
netty-resolver-macos = { module = "io.netty:netty-resolver-dns-native-macos", version.ref = "netty" }
netty-transports = { module = "io.netty:netty-transport", version.ref = "netty" }
netty-transport-kqueue = { module = "io.netty:netty-transport-native-kqueue", version.ref = "netty" }
netty-transport-epoll = { module = "io.netty:netty-transport-native-epoll", version.ref = "netty" }
netty-handlers = { module = "io.netty:netty-handler", version.ref = "netty" }
netty-handler-proxy = { module = "io.netty:netty-handler-proxy", version.ref = "netty" }
netty-codec-http = { module = "io.netty:netty-codec-http", version.ref = "netty" }
netty-codec-http2 = { module = "io.netty:netty-codec-http2", version.ref = "netty" }
netty-codec-socks = { module = "io.netty:netty-codec-socks", version.ref = "netty" }


vertx-core = { module = "io.vertx:vertx-core", version.ref = "vertx" }
vertx-pg-client = { module = "io.vertx:vertx-pg-client", version.ref = "vertx" }
vertx-sql-client = { module = "io.vertx:vertx-sql-client", version.ref = "vertx" }

r2dbc-spi = { module = "io.r2dbc:r2dbc-spi", version = "1.0.0.RELEASE" }
r2dbc-pool = { module = "io.r2dbc:r2dbc-pool", version = "1.0.2.RELEASE" }
r2dbc-postgres = { module = "org.postgresql:r2dbc-postgresql", version = "1.0.5.RELEASE" }

byte-buddy-core = { module = "net.bytebuddy:byte-buddy", version = "1.14.9" }
byte-buddy-agent = { module = "net.bytebuddy:byte-buddy-agent", version = "1.14.9" }

javapoet = { module = "com.squareup:javapoet", version = "1.13.0" }
classgraph = { module = "io.github.classgraph:classgraph", version = "4.8.170" }

lettuce-core = { module = "io.lettuce:lettuce-core", version = "6.5.2.RELEASE" }
apache-pool = { module = "org.apache.commons:commons-pool2", version = "2.12.1" }
quartz = { module = "org.quartz-scheduler:quartz", version = "2.3.2" }

caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version = "3.1.8" }

awaitility = { module = "org.awaitility:awaitility", version = "4.2.1" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version = "5.10.2" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version = "1.10.2" }
mockito-core = { module = "org.mockito:mockito-core", version = "5.11.0" }
mockito-inline = { module = "org.mockito:mockito-inline", version = "5.2.0" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version = "5.3.1" }
assertj = { module = "org.assertj:assertj-core", version = "3.25.3" }
mockserver-netty = { module = "org.mock-server:mockserver-netty", version.ref = "mockserver" }
mockserver-client = { module = "org.mock-server:mockserver-client-java", version.ref = "mockserver" }

kafka-client = { module = "org.apache.kafka:kafka-clients", version.ref = "kafka" }

# gRPC - https://github.com/grpc/grpc-java/blob/master/SECURITY.md#netty
grpc-kotlin-stub = { module = "io.grpc:grpc-kotlin-stub", version.ref = "grpc-kotlin" }
grpc-kotlin-gen = { module = "io.grpc:protoc-gen-grpc-kotlin", version.ref = "grpc-kotlin" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc-java" }
grpc-netty = { module = "io.grpc:grpc-netty", version.ref = "grpc-java" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc-java" }
grpc-services = { module = "io.grpc:grpc-services", version.ref = "grpc-java" }
grpc-java-gen = { module = "io.grpc:protoc-gen-grpc-java", version.ref = "grpc-java" }

testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-r2dbc = { module = "org.testcontainers:r2dbc", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-cassandra = { module = "org.testcontainers:cassandra", version.ref = "testcontainers" }
testcontainers-kafka = { module = "org.testcontainers:kafka", version.ref = "testcontainers" }

ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
ksp = { module = "com.google.devtools.ksp:symbol-processing", version.ref = "ksp" }
kotlin-compile-testing = { module = "com.github.tschuchortdev:kotlin-compile-testing", version.ref = "kotlin-testing" }

kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }

jakarta-jws-api = { module = "jakarta.jws:jakarta.jws-api", version = "3.0.0" }
jakarta-xml-ws-api = { module = "jakarta.xml.ws:jakarta.xml.ws-api", version = "3.0.1" }
jakarta-xml-bind-api = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version = "3.0.1" }

glassfish-jaxb-jakarta = { module = "org.glassfish.jaxb:jaxb-runtime", version = "3.0.1" }
glassfish-jaxb-javax = { module = "org.glassfish.jaxb:jaxb-runtime", version = "2.3.0.1" }

commons-codec = { module = "commons-codec:commons-codec", version = "1.16.1" }
commons-io = { module = "commons-io:commons-io", version = "2.16.1" }

openapi-generator = { module = "org.openapitools:openapi-generator", version = "7.4.0" }
translit-icu4j = { module = "com.ibm.icu:icu4j", version = "77.1" }
swagger-core = { module = "io.swagger.core.v3:swagger-core", version.ref = "swagger" }
swagger-models = { module = "io.swagger.core.v3:swagger-models", version.ref = "swagger" }
swagger-annotations = { module = "io.swagger.core.v3:swagger-annotations", version.ref = "swagger" }

s3client-minio = { module = "io.minio:minio", version = "8.5.12" }
s3client-aws = { module = "software.amazon.awssdk:s3", version = "2.27.12" }

camunda7-engine = { module = "org.camunda.bpm:camunda-engine", version.ref = "camunda7" }
camunda7-rest-jakarta = { module = "org.camunda.bpm:camunda-engine-rest-jakarta", version.ref = "camunda7" }
camunda7-openapi = { module = "org.camunda.bpm:camunda-engine-rest-openapi", version.ref = "camunda7" }
resteasy-undertow-jakarta = { module = "org.jboss.resteasy:resteasy-undertow", version.ref = "undertow-jakarta" }
fasterxml-uuidgenerator = { module = "com.fasterxml.uuid:java-uuid-generator", version = "5.0.0" }
jakarta-rs-api = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version = "3.1.0" }

zeebe-model = { module = "io.camunda:zeebe-bpmn-model", version.ref = "zeebe" }
zeebe-client = { module = "io.camunda:zeebe-client-java", version.ref = "zeebe" }


["bundles"]
netty = [
    "netty-buffer", "netty-codecs", "netty-codec-http", "netty-codec-socks", "netty-common", "netty-handlers", "netty-handler-proxy",
    "netty-resolver", "netty-transports"
]
