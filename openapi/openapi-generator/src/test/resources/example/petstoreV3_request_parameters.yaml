openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /textplain:
    post:
      tags:
        - pets
      operationId: petPlain
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: OK
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: intOptional
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - name: intRequired
          in: query
          description: How many items to return at one time (max 100)
          required: true
          schema:
            type: integer
            format: int32
        - name: intDefault
          in: query
          description: How many items to return at one time (max 100)
          schema:
            type: integer
            format: int32
            default: 100
        - name: stringOptional
          in: query
          required: false
          schema:
            type: string
        - name: stringRequired
          in: query
          required: true
          schema:
            type: string
        - name: stringDefault
          in: query
          schema:
            type: string
            default: 100
        - name: enumModelOptional
          in: query
          schema:
            $ref: "#/components/schemas/PetTypes"
        - name: enumModelRequired
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/PetTypes"
        - name: enumModelDefault
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/PetTypesDefaults"
        - name: enumArrayOptional
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - available
                - sold
        - name: enumArrayRequired
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
              enum:
                - available
                - sold
        - name: enumArrayDefault
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - available
                - sold
            default: [ available, sold ]
        - name: enumModelArrayOptional
          in: query
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PetTypes"
        - name: enumModelArrayRequired
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PetTypes"
        - name: enumModelArrayDefault
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PetTypesDefaults"
            default: [ cat, dog ]
        - name: enumOptional
          in: query
          required: false
          schema:
            type: string
            enum:
              - available
              - sold
        - name: enumRequired
          in: query
          required: true
          schema:
            type: string
            enum:
              - available
              - sold
        - name: enumDefault
          in: query
          required: false
          explode: true
          schema:
            type: string
            default: available
            enum:
              - available
              - pending
              - sold
      responses:
        '200':
          description: A paged array of pets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        nonRequiredId:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    PetTypes:
      type: string
      enum:
        - cat
        - dog
    PetTypesDefaults:
      type: string
      default: cat
      enum:
        - cat
        - dog
