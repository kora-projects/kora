[
    {
        "tags": [ ],
        "typeRegex": "ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper.*",
        "tip": "You might have in mind to use @Json for mapping HTTP Controller's method return value, but forgot to annotate method return value in your @Controller with @Json annotation\n    If you don't want to use @Json, you must manually provide a custom `ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper<T>` for claimed type implementation and register it in graph (e.g. via @Component or module binding or @Mapping)."
    },
    {
        "tags": [ ],
        "typeRegex": "ru.tinkoff.kora.http.server.common.handler.HttpServerResponseMapper.*",
        "tip": "If this @Controller was generated from an OpenAPI specification, ensure that\n    relevant response in the spec explicitly declares Content-Type: 'application/json'. For example:\n          responses:\n            '200':\n              description: OK\n              content:\n                application/json:        # ← this is required\n    If the 'content' section is missing or incorrect, the code generator won't apply the @Json annotation for response mapper."
    },
    {
        "tags": [ "ru.tinkoff.kora.json.common.annotation.Json" ],
        "typeRegex": "ru.tinkoff.kora.json.common.JsonWriter<ru.tinkoff.kora.http.server.common.HttpServerResponse>",
        "tip": "You may be mistakenly placed @Json annotation for @Controller method return type with type: `ru.tinkoff.kora.http.server.common.HttpServerResponse`"
    },
    {
        "tags": [ ],
        "typeRegex": "ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<.*",
        "tip": "You might have intended to use @Json for mapping HTTP Controller's method request body argument, but forgot to annotate body argument in your HTTP @Controller method argument with @Json annotation\n    If you don't want to use @Json, you must manually provide a custom `ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<T>` (`java.util.concurrent.CompletionStage<T>` not required) for claimed type implementation and register it in graph (e.g. via @Component or module binding or @Mapping)."
    },
    {
        "tags": [ ],
        "typeRegex": "ru.tinkoff.kora.http.server.common.handler.HttpServerRequestMapper<java.util.concurrent.CompletionStage<.*",
        "tip": "If this @Controller was generated from an OpenAPI specification, ensure that\n    relevant request body in the spec explicitly defines Content-Type: 'application/json'. For example:\n           requestBody:\n             content:\n              application/json:          # ← this is required\n    If the 'content' section is missing or incorrect, the code generator won't apply the @Json annotation for argument request mapper."
    },
    {
        "tags": [ "ru.tinkoff.kora.json.common.annotation.Json" ],
        "typeRegex": "ru.tinkoff.kora.json.common.JsonWriter<ru.tinkoff.kora.http.server.common.HttpServerRequest>",
        "tip": "You may be mistakenly placed @Json annotation for @Controller method argument with type: `ru.tinkoff.kora.http.server.common.HttpServerRequest`"
    }
]
